{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning react\\\\login-with-express-jwt\\\\src\\\\components\\\\user\\\\createUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateUser() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordOne, setpasswordOne] = useState(\"\");\n  const [passwordTwo, setPasswordTwo] = useState(\"\");\n  const [emptyInput, setemptyInput] = useState(\"\");\n  useEffect(() => {}, [emptyInput]);\n\n  const postUser = async e => {\n    e.preventDefault();\n\n    if (validateInputs()) {\n      if (passwordOne == passwordTwo) {\n        const newUser = {\n          name,\n          email,\n          passwordOne\n        };\n\n        try {\n          const response = axios.post(\"http://localhost:5000/user/register\", {\n            newUser\n          });\n          console.log(response);\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        setemptyInput(\"Password does not match\");\n      }\n    } else {\n      setemptyInput(\"Complete all fields.\");\n      setTimeout(() => {\n        setemptyInput(\"\");\n      }, 5000);\n    }\n  }; // true: no empty inputs, false: there must be one empty input.\n\n\n  const validateInputs = () => {\n    if (!name.trim()) {\n      setemptyInput(\"Name input is empty\");\n    } else {\n      if (!email.trim()) {\n        setemptyInput(\"Email input is empty\");\n      } else {\n        if (!passwordOne.trim()) {\n          setemptyInput(\"PasswordOne input is empty\");\n        } else {\n          if (!passwordOne.trim()) {\n            setemptyInput(\"PasswordOne input is empty\");\n          } else {\n            if (!passwordTwo.trim()) {\n              setemptyInput(\"PasswordTwo input is empty\");\n            } else {\n              return false;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-right-con\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-home-right \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bold-light\",\n        children: \"Take 10% off today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-login\",\n        onSubmit: postUser,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-Inputs bold-light\",\n          htmlFor: \"email\",\n          children: \"Name and Lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"text\",\n          onChange: e => {\n            setName(e.target.value);\n          },\n          placeholder: \"your name\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-Inputs bold-light mt-24\",\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"text\",\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          placeholder: \"Youremail@address.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-Inputs bold-light mt-24 r-label \",\n            htmlFor: \"email\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label-Inputs bold-light mt-24 ml-40px\",\n            htmlFor: \"email\",\n            children: \"Password again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setpasswordOne(e.target.value);\n            },\n            className: \"register-input \",\n            type: \"password\",\n            placeholder: \"Your password\",\n            required: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => {\n              setPasswordTwo(e.target.value);\n            },\n            className: \"register-input  register-input-right\",\n            type: \"password\",\n            placeholder: \"Your password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100 btn-login\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), emptyInput ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inputValidation-message\",\n          children: emptyInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 39\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-after-bttn\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"textafterlogin\",\n            children: \"Already have an account \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"bold-light href\",\n            to: \"/user/login\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateUser, \"53XlnZB0XNI8ZNpgd0SlJCACY6Y=\");\n\n_c = CreateUser;\nexport default CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["D:/Learning react/login-with-express-jwt/src/components/user/createUser.jsx"],"names":["React","Link","useEffect","useState","axios","CreateUser","name","setName","email","setEmail","passwordOne","setpasswordOne","passwordTwo","setPasswordTwo","emptyInput","setemptyInput","postUser","e","preventDefault","validateInputs","newUser","response","post","console","log","error","setTimeout","trim","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreateUser() {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [passwordOne, setpasswordOne] = useState(\"\");\r\n    const [passwordTwo, setPasswordTwo] = useState(\"\");\r\n    const [emptyInput, setemptyInput] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n\r\n\r\n    }, [emptyInput]);\r\n\r\n\r\n    const postUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if (validateInputs()) {\r\n\r\n            if (passwordOne == passwordTwo) {\r\n\r\n                const newUser = {\r\n                    name,\r\n                    email,\r\n                    passwordOne\r\n                }\r\n\r\n\r\n                try {\r\n                    const response = axios.post(\"http://localhost:5000/user/register\", { newUser });\r\n                    console.log(response);\r\n\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n\r\n            } else {\r\n                setemptyInput(\"Password does not match\")\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            setemptyInput(\"Complete all fields.\")\r\n            setTimeout(() => {\r\n                setemptyInput(\"\");\r\n            }, 5000);\r\n\r\n        }\r\n    }\r\n\r\n    // true: no empty inputs, false: there must be one empty input.\r\n    const validateInputs = () => {\r\n\r\n        if (!name.trim()) {\r\n            setemptyInput(\"Name input is empty\");\r\n        } else {\r\n\r\n            if (!email.trim()) {\r\n                setemptyInput(\"Email input is empty\");\r\n            } else {\r\n\r\n                if (!passwordOne.trim()) {\r\n                    setemptyInput(\"PasswordOne input is empty\");\r\n                } else {\r\n\r\n                    if (!passwordOne.trim()) {\r\n                        setemptyInput(\"PasswordOne input is empty\");\r\n                    } else {\r\n                        if (!passwordTwo.trim()) {\r\n                            setemptyInput(\"PasswordTwo input is empty\");\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"home-right-con\">\r\n\r\n            <div className=\"content-home-right \">\r\n\r\n                <h1 className=\"bold-light\">Take 10% off today.</h1>\r\n\r\n                <form className=\"form-login\" onSubmit={postUser} >\r\n\r\n                    <label className=\"label-Inputs bold-light\" htmlFor=\"email\">Name and Lastname</label>\r\n                    <input className=\"login-input\" type=\"text\" onChange={(e) => { setName(e.target.value) }} placeholder=\"your name\" autoFocus />\r\n\r\n                    <label className=\"label-Inputs bold-light mt-24\" htmlFor=\"email\">Email</label>\r\n                    <input className=\"login-input\" type=\"text\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Youremail@address.com\" />\r\n\r\n                    <div className=\"\">\r\n\r\n                        <label className=\"label-Inputs bold-light mt-24 r-label \" htmlFor=\"email\">Password</label>\r\n                        <label className=\"label-Inputs bold-light mt-24 ml-40px\" htmlFor=\"email\">Password again</label>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"display-flex\">\r\n                        <input onChange={(e) => { setpasswordOne(e.target.value) }} className=\"register-input \" type=\"password\" placeholder=\"Your password\" required=\"\" />\r\n                        <input onChange={(e) => { setPasswordTwo(e.target.value) }} className=\"register-input  register-input-right\" type=\"password\" placeholder=\"Your password\" />\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100 btn-login\">Register</button>\r\n                    {\r\n                        emptyInput ? (<span className=\"inputValidation-message\">{emptyInput}</span>) : (<span></span>)\r\n                    }\r\n                </form>\r\n\r\n                <div className=\"p-after-bttn\">\r\n                    <p>\r\n                        <span className=\"textafterlogin\">Already have an account </span>\r\n                        <Link className=\"bold-light href\" to=\"/user/login\">Log In</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default CreateUser;"]},"metadata":{},"sourceType":"module"}