{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning react\\\\login-with-express-jwt\\\\src\\\\components\\\\user\\\\createUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateUser() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [passwordOne, setpasswordOne] = useState(\"\");\n  const [passwordTwo, setPasswordTwo] = useState(\"\");\n  const [regError, setregError] = useState(\"\");\n  useEffect(() => {}, [emptyInput]);\n\n  const postUser = async e => {\n    e.preventDefault();\n\n    if (validateInputs() === true) {\n      if (passwordOne === passwordTwo) {\n        const newUser = {\n          name,\n          email,\n          password: passwordOne\n        };\n\n        try {\n          const response = await axios.post(process.env.REACT_APP_CREATE_USER, newUser);\n          console.log(response.data);\n        } catch (error) {\n          console.log(error + \" Error: Something is bad with the endpoint.\");\n        }\n      } else {\n        setemptyInput(\"Password does not match.\");\n        setTimeout(() => {\n          setemptyInput(\"\");\n        }, 5000);\n      }\n    } else {// console.log(\"error inputValidation.\");\n    }\n  }; // true: no empty inputs, false: there must be one empty input.\n\n\n  const validateInputs = () => {\n    if (!name.trim()) {\n      setemptyInput(\"Name is empty.\");\n      setTimeout(() => {\n        setemptyInput(\"\");\n      }, 5000);\n    } else {\n      if (!email.trim()) {\n        setemptyInput(\"Email is empty.\");\n        setTimeout(() => {\n          setemptyInput(\"\");\n        }, 5000);\n      } else {\n        if (!passwordOne.trim()) {\n          setemptyInput(\"Passwor is empty.\");\n          setTimeout(() => {\n            setemptyInput(\"\");\n          }, 5000);\n        } else {\n          if (!passwordTwo.trim()) {\n            setemptyInput(\"Password confirmation is empty.\");\n            setTimeout(() => {\n              setemptyInput(\"\");\n            }, 5000);\n          } else {\n            return true;\n          }\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-right-con\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-home-right \",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"bold-light\",\n        children: \"Take 10% off today.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-login\",\n        onSubmit: postUser,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-Inputs bold-light\",\n          htmlFor: \"email\",\n          children: \"Name and Lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"text\",\n          onChange: e => {\n            setName(e.target.value);\n          },\n          placeholder: \"your name\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-Inputs bold-light mt-24\",\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          },\n          placeholder: \"Youremail@address.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-flex mt-24\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-Inputs bold-light \",\n              htmlFor: \"email\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => {\n                  setpasswordOne(e.target.value);\n                },\n                className: \"register-input\",\n                type: \"password\",\n                placeholder: \"Your password\",\n                required: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 inputs-space\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-Inputs  bold-light\",\n              htmlFor: \"email\",\n              children: \"Password again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => {\n                  setPasswordTwo(e.target.value);\n                },\n                className: \"register-input\",\n                type: \"password\",\n                placeholder: \"Your password\",\n                required: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary w-100 btn-login\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), regError ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"inputValidation-message\",\n          children: regError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 101\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-after-bttn\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"textafterlogin\",\n            children: \"Already have an account \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            className: \"bold-light href\",\n            to: \"/user/login\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateUser, \"f16uZFVjHErOvyB945iINZM3PDo=\");\n\n_c = CreateUser;\nexport default CreateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateUser\");","map":{"version":3,"sources":["D:/Learning react/login-with-express-jwt/src/components/user/createUser.jsx"],"names":["React","Link","useEffect","useState","axios","CreateUser","name","setName","email","setEmail","passwordOne","setpasswordOne","passwordTwo","setPasswordTwo","regError","setregError","emptyInput","postUser","e","preventDefault","validateInputs","newUser","password","response","post","process","env","REACT_APP_CREATE_USER","console","log","data","error","setemptyInput","setTimeout","trim","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction CreateUser() {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [passwordOne, setpasswordOne] = useState(\"\");\r\n    const [passwordTwo, setPasswordTwo] = useState(\"\");\r\n    const [regError, setregError] = useState(\"\");\r\n    useEffect(() => {\r\n\r\n\r\n\r\n    }, [emptyInput]);\r\n\r\n\r\n    const postUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        if (validateInputs() === true) {\r\n\r\n\r\n            if (passwordOne === passwordTwo) {\r\n\r\n                const newUser = { name, email, password: passwordOne }\r\n               \r\n                try {\r\n\r\n                    const response = await axios.post(process.env.REACT_APP_CREATE_USER, newUser);\r\n                    console.log(response.data);\r\n\r\n                } catch (error) {\r\n\r\n                    console.log(error + \" Error: Something is bad with the endpoint.\");\r\n                }\r\n\r\n            } else {\r\n                setemptyInput(\"Password does not match.\");\r\n                setTimeout(() => {\r\n                    setemptyInput(\"\");\r\n                }, 5000);\r\n\r\n            }\r\n        } else {\r\n\r\n            // console.log(\"error inputValidation.\");\r\n        }\r\n    }\r\n\r\n    // true: no empty inputs, false: there must be one empty input.\r\n    const validateInputs = () => {\r\n\r\n        if (!name.trim()) {\r\n            setemptyInput(\"Name is empty.\");\r\n            setTimeout(() => {\r\n                setemptyInput(\"\");\r\n            }, 5000);\r\n        } else {\r\n\r\n            if (!email.trim()) {\r\n                setemptyInput(\"Email is empty.\");\r\n                setTimeout(() => {\r\n                    setemptyInput(\"\");\r\n                }, 5000);\r\n\r\n            } else {\r\n\r\n                if (!passwordOne.trim()) {\r\n                    setemptyInput(\"Passwor is empty.\");\r\n                    setTimeout(() => {\r\n                        setemptyInput(\"\");\r\n                    }, 5000);\r\n                } else {\r\n\r\n                    if (!passwordTwo.trim()) {\r\n                        setemptyInput(\"Password confirmation is empty.\");\r\n                        setTimeout(() => {\r\n                            setemptyInput(\"\");\r\n                        }, 5000);\r\n                    } else {\r\n                        return true;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"home-right-con\">\r\n\r\n            <div className=\"content-home-right \">\r\n\r\n                <h1 className=\"bold-light\">Take 10% off today.</h1>\r\n\r\n                <form className=\"form-login\" onSubmit={postUser} >\r\n\r\n                    <label className=\"label-Inputs bold-light\" htmlFor=\"email\">Name and Lastname</label>\r\n                    <input className=\"login-input\" type=\"text\" onChange={(e) => { setName(e.target.value) }} placeholder=\"your name\" autoFocus />\r\n\r\n                    <label className=\"label-Inputs bold-light mt-24\" htmlFor=\"email\">Email</label>\r\n                    <input className=\"login-input\" type=\"email\" onChange={(e) => { setEmail(e.target.value) }} placeholder=\"Youremail@address.com\" />\r\n\r\n                    <div className=\"display-flex mt-24\"> \r\n                            <div className=\"w-100\">\r\n                                <label className=\"label-Inputs bold-light \" htmlFor=\"email\">Password</label>\r\n                                <div className=\"\">\r\n                                    <input onChange={(e) => { setpasswordOne(e.target.value) }} className=\"register-input\" type=\"password\" placeholder=\"Your password\" required=\"\" />\r\n                                </div>\r\n                            </div>\r\n \r\n                            <div className=\"w-100 inputs-space\">\r\n                                <label className=\"label-Inputs  bold-light\" htmlFor=\"email\">Password again</label>\r\n                                <div className=\"\">\r\n                                    <input onChange={(e) => { setPasswordTwo(e.target.value) }} className=\"register-input\" type=\"password\" placeholder=\"Your password\" required=\"\" />\r\n                                </div>\r\n                            </div> \r\n                    </div>\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary w-100 btn-login\">Register</button>\r\n                    {\r\n                        regError ? (<span className=\"inputValidation-message\">{regError}</span>) : (<span></span>)\r\n                    }\r\n                </form>\r\n\r\n                <div className=\"p-after-bttn\">\r\n                    <p>\r\n                        <span className=\"textafterlogin\">Already have an account </span>\r\n                        <Link className=\"bold-light href\" to=\"/user/login\">Log In</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default CreateUser;"]},"metadata":{},"sourceType":"module"}